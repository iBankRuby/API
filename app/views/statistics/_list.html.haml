/ %h3 Users
/ -if @account_users
/   %table
/     %thead
/       %tr
/         %th Name:
/         %th Role:
/       %tbody
/       - @account_users.each do |t|
/         %tr
/           %td= t.user.name
/           %th= t.role.name

/ %select.btn.btn-outline-success.dropdown-toggle{:name => "to_vote"}
/   %option.dropdown-item Users
/   - @account_users.each do |t|
/     %option.dropdown-item= t.user.name

%h3 Outcome
-if @transactions
  %table#grid
    %thead
      %tr
        %th{"data-type" => "string"}  User:
        %th{"data-type" => "string"}  To:
        %th Remainder:
        %th{"data-type" => "numder"}  Balance before:
        %th{"data-type" => "number"}  Summ:
        %th Balance after outcome:
        %th Created:
        %th Status:
        %th Decision time:
      %tbody
      - @transactions.each do |t|
        - i = 1
        %tr{"id" => i}
          %th= t.user.name
          %td= t.remote_account_iban
          %th= t.remainder
          %th= t.balance
          %th= t.summ
          %th= t.balance_after
          %td= t.created_at.to_formatted_s(:short)
          %th= t.status_from
          %td= t.updated_at.to_formatted_s(:short)
          - i+= 1
%h3 Income
-if @income
  %table
    %thead
      %tr
        %th From:
        %th Summ:
        %th Balance after income:
      %tbody
      - @income.each do |t|
        %tr
          %td= t.account.iban
          %th= t.summ
          %th= t.remote_balance_after



:javascript
  / var grid = document.getElementById('grid');
  / grid.onclick = function(e) {
  /   if (e.target.tagName != 'TH') return;
  /   sortGrid(e.target.cellIndex, e.target.getAttribute('data-type'));
  / };

  / function sortGrid(colNum, type) {
  /   var tbody = grid.getElementsByTagName('tbody')[0];
  /   var rowsArray = [].slice.call(tbody.rows);
  /   var compare;

  /   switch (type) {
  /     case 'number':
  /       compare = function(rowA, rowB) {
  /         return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;
  /       };
  /       break;
  /     case 'string':
  /       compare = function(rowA, rowB) {
  /         return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML ? 1 : -1;
  /       };
  /       break;
  /   }

  /   rowsArray.sort(compare);
  /   grid.removeChild(tbody);

  /   for (var i = 0; i < rowsArray.length; i++) {
  /     tbody.appendChild(rowsArray[i]);
  /   }

  /   grid.appendChild(tbody);

  / }
  